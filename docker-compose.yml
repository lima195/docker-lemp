version: '3.1'
services:
  nginx:
    container_name: app_nginx
    image: nginx:latest
    volumes:
     - ./nginx_conf/magento.conf:/etc/nginx/conf.d/default.conf
     # - ./nginx_conf/laravel.conf:/etc/nginx/conf.d/laravel.conf
     - ../www:/usr/share/nginx/www
    working_dir: /usr/share/nginx/www
    ports:
      - 80:80
      - 443:443
    expose:
      - 443
    links:
      # - db
      - php:app_php
    depends_on:
      - php

  php:
    container_name: app_php
    # build:
    #   context: .
    #   dockerfile: ./php72/Dockerfile
    image: lima195/php-fpm7.2:magento234baler
    user: john
    volumes:
     - ../www:/usr/share/nginx/www
     - ./etc/php_ini/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    #  - './composer/auth.json:/home/john/.composer/auth.json'
     - './etc/sh/cp-files.sh:/home/john/cp-files.sh'
    working_dir: /usr/share/nginx/www

  db:
    container_name: app_mysql
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./volumes/mysql/volume:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_DATABASE: app
    ports:
      - 33066:3306

  adminer:
    container_name: app_adminer
    image: adminer
    ports:
      - 8080:8080
    links:
      - db

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.8.13
  #   container_name: app_elasticsearch
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ./volumes-elasticsearch/elasticsearch:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  
  # redis:
  #   container_name: app_redis
  #   image: redis
  #   command: redis-server --requirepass magento
  #   ports:
  #     - "6379:6379"

  # assets:
  #   container_name: app_assets
  #   build:
  #     context: .
  #     dockerfile: ./assets/Dockerfile
  #   volumes:
  #    - ../www:/usr/share/nginx/www
  #   working_dir: /usr/share/nginx/www
  #   tty: true
